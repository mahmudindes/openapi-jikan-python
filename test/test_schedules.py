# coding: utf-8

"""
    Jikan API

    [Jikan](https://jikan.moe) is an **Unofficial** MyAnimeList API. It scrapes the website to satisfy the need for a complete API - which MyAnimeList lacks.  # Information  ⚡ Jikan is powered by its awesome backers - 🙏 [Become a backer](https://www.patreon.com/jikan)  ## Rate Limiting  | Duration | Requests | |----|----| | Daily | **Unlimited** | | Per Minute | 60 requests | | Per Second | 3 requests |  Note: It's still possible to get rate limited from MyAnimeList.net instead.   ## JSON Notes - Any property (except arrays or objects) whose value does not exist or is undetermined, will be `null`. - Any array or object property whose value does not exist or is undetermined, will be empty. - Any `score` property whose value does not exist or is undetermined, will be `0`. - All dates and timestamps are returned in [ISO8601](https://en.wikipedia.org/wiki/ISO_8601) format and in UTC timezone  ## Caching By **CACHING**, we refer to the data parsed from MyAnimeList which is stored temporarily on our servers to provide better API performance.  All requests are cached for **24 hours**.  The following response headers will detail cache information.  | Header | Remarks | | ---- | ---- | | `Expires` | Cache expiry date | | `Last-Modified` | Cache set date | | `X-Request-Fingerprint` | Unique request fingerprint (only for cachable requests, not queries) |   Note: `X-Request-Fingerprint` will only be available on single resource requests and their child endpoints. e.g `/anime/1`, `/anime/1/relations`. They won't be available on pages which perform queries, like /anime, or /top/anime, etc.  ## Allowed HTTP(s) requests  **Jikan REST API does not provide authenticated requests for MyAnimeList.** This means you can not use it to update your anime/manga list. Only GET requests are supported which return READ-ONLY data.  ## HTTP Responses  All error responses are accompanied by a JSON Error response.  | Exception | HTTP Status | Remarks | | ---- | ---- | ---- | | N/A | `200 - OK` | The request was successful | | N/A | `304 - Not Modified` | You have the latest data (Cache Validation response) | | `BadRequestException`,`ValidationException` | `400 - Bad Request` | You've made an invalid request. Recheck documentation | | `BadResponseException` | `404 - Not Found` | The resource was not found or MyAnimeList responded with a `404` | | `BadRequestException` | `405 - Method Not Allowed` | Requested Method is not supported for resource. Only `GET` requests are allowed | | `RateLimitException` | `429 - Too Many Request` | You are being rate limited by Jikan or MyAnimeList is rate-limiting our servers (specified in the error response) | | `UpstreamException`,`ParserException`,etc. | `500 - Internal Server Error` | Something didn't work. Try again later. If you see an error response with a `report_url` URL, please click on it to open an auto-generated GitHub issue | | `ServiceUnavailableException` | `503 - Service Unavailable` | In most cases this is intentionally done if the service is down for maintenance. |  ## JSON Error Response  ```json  {      \"status\": 500,      \"type\": \"InternalException\",      \"message\": \"Exception Message\",      \"error\": \"Exception Trace\",      \"report_url\": \"https://github.com...\"   } ```  | Property | Remarks | | ---- | ---- | | `status` | Returned HTTP Status Code | | `type` | Thrown Exception | | `message` | Human-readable error message | | `error` | Error response and trace from the API | | `report_url` | Clicking this would redirect you to a generated GitHub issue |   ## Cache Validation  - All requests return a `ETag` header which is an MD5 hash of the response - You can use this hash to verify if there's new or updated content by suppliying it as the value for the `If-None-Match` in your next request header - You will get a HTTP `304 - Not Modified` response if the content has not changed - If the content has changed, you'll get a HTTP `200 - OK` response with the updated JSON response  ![Cache Validation](https://i.imgur.com/925ozVn.png 'Cache Validation')  ## Disclaimer  - Jikan is not affiliated with MyAnimeList.net. - Jikan is a free, open-source API. Please use it responsibly.  ----  By using the API, you are agreeing to Jikan's [terms of use](https://jikan.moe/terms) policy.  [v3 Documentation](https://jikan.docs.apiary.io/) - [Wrappers/SDKs](https://github.com/jikan-me/jikan#wrappers) - [Report an issue](https://github.com/jikan-me/jikan-rest/issues/new) - [Host your own server](https://github.com/jikan-me/jikan-rest)

    The version of the OpenAPI document: 4.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from jikan_openapi.models.schedules import Schedules

class TestSchedules(unittest.TestCase):
    """Schedules unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Schedules:
        """Test Schedules
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Schedules`
        """
        model = Schedules()
        if include_optional:
            return Schedules(
                pagination = jikan_openapi.models.pagination_plus_pagination.pagination_plus_pagination(
                    last_visible_page = 56, 
                    has_next_page = True, 
                    items = jikan_openapi.models.pagination_plus_pagination_items.pagination_plus_pagination_items(
                        count = 56, 
                        total = 56, 
                        per_page = 56, ), ),
                data = [
                    jikan_openapi.models.anime.anime(
                        mal_id = 56, 
                        url = '', 
                        images = jikan_openapi.models.anime_images.anime_images(
                            jpg = jikan_openapi.models.anime_images_jpg.anime_images_jpg(
                                image_url = '', 
                                small_image_url = '', 
                                large_image_url = '', ), 
                            webp = jikan_openapi.models.anime_images_webp.anime_images_webp(
                                image_url = '', 
                                small_image_url = '', 
                                large_image_url = '', ), ), 
                        trailer = jikan_openapi.models.trailer_base.trailer_base(
                            youtube_id = '', 
                            url = '', 
                            embed_url = '', ), 
                        approved = True, 
                        titles = [
                            jikan_openapi.models.title.title(
                                type = '', 
                                title = '', )
                            ], 
                        title = '', 
                        title_english = '', 
                        title_japanese = '', 
                        title_synonyms = [
                            ''
                            ], 
                        type = 'TV', 
                        source = '', 
                        episodes = 56, 
                        status = 'Finished Airing', 
                        airing = True, 
                        aired = jikan_openapi.models.daterange.daterange(
                            from = '', 
                            to = '', 
                            prop = jikan_openapi.models.daterange_prop.daterange_prop(
                                from = jikan_openapi.models.daterange_prop_from.daterange_prop_from(
                                    day = 56, 
                                    month = 56, 
                                    year = 56, ), 
                                to = jikan_openapi.models.daterange_prop_to.daterange_prop_to(
                                    day = 56, 
                                    month = 56, 
                                    year = 56, ), 
                                string = '', ), ), 
                        duration = '', 
                        rating = 'G - All Ages', 
                        score = 1.337, 
                        scored_by = 56, 
                        rank = 56, 
                        popularity = 56, 
                        members = 56, 
                        favorites = 56, 
                        synopsis = '', 
                        background = '', 
                        season = 'summer', 
                        year = 56, 
                        broadcast = jikan_openapi.models.broadcast.broadcast(
                            day = '', 
                            time = '', 
                            timezone = '', 
                            string = '', ), 
                        producers = [
                            jikan_openapi.models.mal_url.mal_url(
                                mal_id = 56, 
                                type = '', 
                                name = '', 
                                url = '', )
                            ], 
                        licensors = [
                            jikan_openapi.models.mal_url.mal_url(
                                mal_id = 56, 
                                type = '', 
                                name = '', 
                                url = '', )
                            ], 
                        studios = [
                            
                            ], 
                        genres = [
                            
                            ], 
                        explicit_genres = [
                            
                            ], 
                        themes = [
                            
                            ], 
                        demographics = [
                            
                            ], )
                    ]
            )
        else:
            return Schedules(
        )
        """

    def testSchedules(self):
        """Test Schedules"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
